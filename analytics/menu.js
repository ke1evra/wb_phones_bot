const moment = require('moment');
const API = require('../analytics/data-manager.js');
const axios = require('axios');
const icons = require('./numberIcons.js');

class Button {
    constructor(text, cb) {
        this.btn = { text: text, callback_data: cb }
    }
}

class Menu{
    constructor() {
        this.year = moment().format('YYYY');
        this.month = moment().format('MM')
    }

    async renderMissedCalls(days){
        const data = await API.getMissedCalls(days);
        // console.log(data);
        let message = '–°–ø–∏—Å–æ–∫ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤: \n ---------------------------\n';
        const menu = [];
        // console.log(data);

        data.data.map((item, index) => {
            const orderNum = `${item.order_number ? '\n–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: ' + item.order_number : ''}`;
            const clientName = `${item.client_name ? ' | ' + item.client_name : ''}`;
            const missedAt = moment(item.missed_at).format('DD.MM HH:mm');
            message += `${index + 1}. ${item.client} ( ${missedAt} )\n–ü–æ–ø—ã—Ç–æ–∫ –¥–æ–∑–≤–æ–Ω–∞: ${item.nedozvon_cnt}\n–õ–∏–Ω–∏—è: ${item.line_number}${orderNum}${clientName} \n---------------------------\n`;
            menu.push(new Button(item.client_name, 'some cb'))
        });
        let options = {
            reply_markup: JSON.stringify({
                inline_keyboard: [
                    menu,
                ]
            }),
            // disable_web_page_preview: true,
        };
        if(!data.data.length)
            message = '–ù–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤';
        return message;
    }
    async renderExpenses(days){
        const data = await API.getExpenses(days);
        // console.log(data);
        let message = '–°–ø–∏—Å–æ–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤: \n ---------------------------\n';
        const menu = [];
        // console.log(data);

        data.data.map((item, index) => {
            message += `${index + 1}. (${item.date})\n–Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç: ${item.yandexmarket}\n–Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç: ${item.yandexdirect}\nGoogle Ads: ${item.googleads}\n–í—Å–µ–≥–æ: ${item['total']} \n---------------------------\n`;
            menu.push(new Button(item.client_name, 'some cb'))
        });
        let options = {
            reply_markup: JSON.stringify({
                inline_keyboard: [
                    menu,
                ]
            }),
            // disable_web_page_preview: true,
        };
        if(!data.data.length)
            message = '–ù–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤';
        return message;
    }
}

const menu = new Menu();

const messages ={
    hello:
    `
    –ü—Ä–∏–≤–µ—Ç üëã, —è VI (–°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ –æ—Ç Vkostume Informer)
    –Ø —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:
    /orders - –ø–æ –∑–∞–∫–∞–∑–∞–º
    /expenses - —Ä–∞—Å—Ö–æ–¥—É
    /calls - –ø–æ –∑–≤–æ–Ω–∫–∞–º 
    /managers - –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º
    /missed - –ø–æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º –∑–≤–æ–Ω–∫–∞–º
    `,
    orders: `orders message`,
    missed: menu.renderMissedCalls,
    expenses: menu.renderExpenses
};




module.exports = messages;
